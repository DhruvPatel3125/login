<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Welcome - Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .dashboard-container {
            max-width: 800px;
            margin: 50px auto;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            border-radius: 8px;
        }
        .welcome-header {
            background-color: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="dashboard-container">
            <% if (typeof error !== 'undefined' && error) { %>
                <div class="alert alert-warning alert-dismissible fade show mb-4" role="alert">
                    <%= error %>
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            <% } %>
            <div class="welcome-header">
                <div class="d-flex justify-content-between align-items-center">
                    <h2>Welcome, <%= user.username %></h2>
                    <a href="/logout" class="btn btn-danger">Logout</a>
                </div>
            </div>
            <div class="user-info">
                <h4 class="mb-3">Your Profile Information</h4>
                <div class="card">
                    <div class="card-body">
                        <p><strong>Email:</strong> <%= user.email %></p>
                        <p><strong>Phone:</strong> <%= user.phone %></p>
                        <p><strong>Account Created:</strong> <%= user.createdAt ? new Date(user.createdAt).toLocaleDateString() : 'N/A' %></p>
                    </div>
                </div>
            </div>

            <!-- Razorpay Payment Section -->
            <div class="payment-section mt-4">
                <h4>Make a Payment</h4>
                <button class="btn btn-primary" id="payNowButton">Pay Now (â‚¹500)</button>
            </div>
            <!-- End Razorpay Payment Section -->

        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
        // Use the Razorpay Key ID passed from the backend
        const razorpayKeyId = "<%= razorpayKeyId %>"; 

        // Wait for the DOM to be fully loaded before adding event listeners
        document.addEventListener('DOMContentLoaded', function() {
            const payNowButton = document.getElementById('payNowButton');
            if (payNowButton) {
                payNowButton.addEventListener('click', createOrder);
            }
        });

        async function createOrder() {
            try {
                // Call your backend to create a Razorpay Order
                const response = await fetch('/create-order', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    // You might send details like amount, product info etc. in the body
                    // body: JSON.stringify({ amount: 50000, currency: 'INR' })
                });

                const order = await response.json();

                if (response.ok) {
                    // Open the Razorpay Checkout form
                    openRazorpayCheckout(order.id);
                } else {
                    alert("Error creating order: " + order.error);
                }

            } catch (error) {
                console.error('Error creating order:', error);
                alert('An error occurred while creating the order.');
            }
        }

        function openRazorpayCheckout(orderId) {
            const options = {
                key: razorpayKeyId, // Use the variable that holds the key ID
                amount: 50000, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
                currency: "INR",
                name: "My Awesome Store",
                description: "Test Transaction",
                order_id: orderId, // Pass the Order ID received from the backend
                handler: function (response) {
                    // This function is called when the payment is successful.
                    // You MUST send this response to your backend for verification.
                    alert("Payment Successful! Sending details to backend for verification.");
                    // TODO: Send response to your backend for verification
                    sendPaymentResponseToBackend(response);
                },
                prefill: { // Optional: prefill customer details
                    name: "<%= user.username %>", // Example using EJS variable
                    email: "<%= user.email %>",
                    // contact: "YOUR_PHONE_NUMBER" // Add user's phone number if available
                },
                notes: {
                    address: "Razorpay Corporate Office"
                },
                theme: {
                    color: "#3399cc"
                }
            };

            const rzp = new Razorpay(options);

            rzp.on('payment.failed', function (response){
                // Handle payment failure
                alert("Payment Failed: " + response.error.description);
                console.error('Payment failed:', response.error);
            });

            rzp.open();
        }

        // TODO: Implement this function to send payment response to your backend for verification
        async function sendPaymentResponseToBackend(response) {
            try {
                const verificationResponse = await fetch('/verify-payment', { // Create a new backend route '/verify-payment'
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(response)
                });

                const result = await verificationResponse.json();

                if (verificationResponse.ok) {
                    if (result.success) {
                        alert("Payment verified successfully!");
                        // Redirect or update UI based on successful payment and verification
                    } else {
                        alert("Payment verification failed: " + result.message);
                        // Handle verification failure
                    }
                } else {
                     alert("Error during payment verification: " + result.error);
                }

            } catch (error) {
                 console.error('Error sending payment response to backend:', error);
                 alert('An error occurred during payment verification.');
            }
        }

    </script>
</body>
</html>