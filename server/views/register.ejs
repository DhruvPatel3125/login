<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .register-container {
            max-width: 400px;
            margin: 50px auto;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            border-radius: 8px;
        }
        .invalid-feedback {
            display: none;
            font-size: 0.875em;
            color: #dc3545;
        }
        .was-validated .form-control:invalid ~ .invalid-feedback,
        .form-control.is-invalid ~ .invalid-feedback {
            display: block;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="register-container">
            <h2 class="text-center mb-4">Register</h2>
            <% if (typeof error !== 'undefined' && error) { %>
                <div class="alert alert-danger"><%= error %></div>
            <% } %>
            <form action="/register" method="POST" class="needs-validation" novalidate>
                <div class="mb-3">
                    <label for="username" class="form-label">Username</label>
                    <input type="text" class="form-control <%= typeof error !== 'undefined' && error ? 'is-invalid' : '' %>"
                           id="username" name="username" required 
                           minlength="3" maxlength="30"
                           value="<%= typeof formData !== 'undefined' ? formData.username || '' : '' %>">
                    <div class="invalid-feedback">
                        Username should be 3-30 characters long
                    </div>
                </div>
                <div class="mb-3">
                    <label for="email" class="form-label">Email address</label>
                    <input type="email" class="form-control <%= typeof error !== 'undefined' && error ? 'is-invalid' : '' %>"
                           id="email" name="email" required
                           value="<%= typeof formData !== 'undefined' ? formData.email || '' : '' %>">
                    <div class="invalid-feedback">
                        Please enter a valid email address
                    </div>
                </div>
                <div class="mb-3">
                    <label for="phone" class="form-label">Phone</label>
                    <input type="tel" class="form-control <%= typeof error !== 'undefined' && error ? 'is-invalid' : '' %>"
                           id="phone" name="phone" pattern="[0-9]{10}" required
                           value="<%= typeof formData !== 'undefined' ? formData.phone || '' : '' %>">
                    <div class="invalid-feedback">
                        Please enter a valid 10-digit phone number
                    </div>
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label">Password</label>
                    <input type="password" class="form-control <%= typeof error !== 'undefined' && error ? 'is-invalid' : '' %>"
                           id="password" name="password" required 
                           minlength="6"
                           value="">
                    <div class="invalid-feedback">
                        Password should be at least 6 characters
                    </div>
                </div>
                <button type="submit" class="btn btn-primary w-100">Register</button>
            </form>
            <div class="text-center mt-3">
                <p>Already have an account? <a href="/">Login here</a></p>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        (() => {
            'use strict';

            const forms = document.querySelectorAll('.needs-validation');
            
            // Real-time validation
            forms[0].querySelectorAll('input').forEach(input => {
                input.addEventListener('input', function() {
                    // Remove server-side validation class
                    this.classList.remove('is-invalid');
                    
                    // Apply client-side validation
                    if (this.checkValidity()) {
                        this.classList.add('is-valid');
                    } else {
                        this.classList.add('is-invalid');
                    }
                });
            });

            // Form submission validation
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                        form.classList.add('was-validated');
                    }
                });
            });
        })();
    </script>
</body>
</html>